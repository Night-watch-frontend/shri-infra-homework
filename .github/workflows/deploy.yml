name: deploy
on: [workflow_dispatch]
jobs:
  test-lint:
    runs-on: ubuntu-latest
    steps:
      - name: get repository
        uses: actions/checkout@v4
      - name: setup dependencies
        run: npm ci
      - name: run tests
        run: npm run test
      - name: run lint
        run: npm run lint
  Checkout-branch:
    runs-on: ubuntu-latest
    needs: test-lint
    steps:
      - name: get repository
        uses: actions/checkout@v4
      - name: Create release branch
        run: |
          git checkout -b releases/v${{ github.run_number }}
                    git push origin releases/v${{ github.run_number }}
      - name: Create tag
        run: |
          git checkout main
          git tag v${{ github.run_number }}
          git push origin v${{ github.run_number }}
      - name: Get previous release tag
        id: previous_tag
        run: |
          echo "::set-output name=previous_tag::$(git describe --abbrev=0 --tags --match 'v*')"
      - name: Get release commit range
        id: commit_range
        run: |
          echo "::set-output name=commit_range::$(git log --pretty=format:'%h %s' --abbrev-commit --no-merges ${{ steps.previous_tag.outputs.previous_tag }}..HEAD)"

      - name: Create an issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Release v${{github.run_number}}
          body: |
            ## Release ${{github.run_number}}: Issue:
             - *Author:* ${{ github.actor }}
            - *Version:* ${{ github.run_number }}
            - *Commits:*
            ${{ steps.commit_range.outputs.commit_range }}
            - *Docker Image:* cr.yandex/<идентификатор_реестра>/app:v${{ github.run_number }}

      - name: Update CHANGELOG
        run: |
          echo "## v${{ github.run_number }}" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "${{ steps.commit_range.outputs.commit_range }}" >> CHANGELOG.md

  Build-and-push-image-to-Yandex-Cloud-Container-Registry:
    runs-on: ubuntu-latest
    needs: test-lint
    steps:
      - name: get repository
        uses: actions/checkout@v4
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crp54rf5t5acteh3vcdt
          CR_REPOSITORY: shri-infra
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -t cr.yandex/${{env.CR_REGISTRY}}/${{env.CR_REPOSITORY}}:${{env.IMAGE_TAG}} -t cr.yandex/${{env.CR_REGISTRY}}/${{env.CR_REPOSITORY}}:${{env.IMAGE_TAG}}_latest -f ./Dockerfile.shir-infra .
          docker push cr.yandex/${{env.CR_REGISTRY}}/${{env.CR_REPOSITORY}} --all-tags
